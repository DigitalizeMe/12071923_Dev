Review 1 
======== 
Contribution of the Submission 
------------------------------ 
The paper presents a new ontology, the Ontology for Chronological Construction Processes (OCCP). The paper is in scope of the DIM track, and an ontology for time in construction combined with the SHACL shapes is a valuable idea. 

Evaluation of the Contribution 
------------------------------ 
Overall      (50%): 6 
Significance (20%): 6 
Originality  (20%): 6 
Presentation (10%): 8 
Total points (out of 10): 6.2 

Comments for the Authors 
------------------------ 
The paper presents a new ontology, the Ontology for Chronological Construction Processes (OCCP). The paper is in scope of the DIM track, and an ontology for time in construction combined with the SHACL shapes is a valuable idea. The concept seems to be in an early stage, with limited development of SHACL shapes and test cases, and I think that this should be reflected in the writing style and conclusions. I added (way too many) comments below, and I hope that they help you with improving the manuscript (and future work). Although I do not think that you will manage to solve all these issues, I hope that you can at least: 
- Solve some problematic data modeling issues (e.g. mixing up datatype properties and object properties), 
- Better explain how you evaluated the ontology, to back up the many claims on what the ontology enables to do, 
- Give a better visual overview of the ontology and the SHACL rules that were developed. 
After that, I think the paper could be accepted for this conference. 

COMMENT 01 
IfcOWL is referred to in the state of the art section, without introducing what IfcOWL is. I also think some existing work on this topic is missing from this section. You’re not the first to represent time-based events in the construction industry, e.g. DiCon also has such concepts (even with Instant and Interval classes). Would be good to better highlight the novelty of this work compared to the existing ontologies. 

COMMENT 02 
The temporal structure of Figure 1, which is the basis of this ontology, seems to be an incomplete representation of phases and transitions in the construction lifecycle. Please better argue why those phases and transitions are used, and what the limitations of using those steps are. E.g. how applicable is this in other countries? 

COMMENT 03 
It is unclear how the competency questions were developed. It is also unclear whether there were more then those three (as the authors write “among others, the following three competency questions guided the validation of OCCP’s semantic constraints”). Why did you only include those three? Although the competency questions are relevant related to this ontology, I believe that this set of competency questions is not able to validate the full scope in which the ontology was designed. I also believe that some of the competency questions are too specific (e.g. “What changes were made to an IFC component during planning and review”). Why only during those two phases? 

COMMENT 04 
In the methodology, the authors state that “These questions demonstrate […] OCCP’s ability to to […] maintain structured, machine-readable chronological records within BIM environments and multimodal environments”. It is unclear what those environments are, what those machine-readable chronological records exactly are, and how the competency questions validate that the ontology can create those records. Is a set of triples the machine-readable chronological record you’re referring to? Or do you also aim to present information in more common BIM exchange formats (such as BCF). 

COMMENT 05 
TIME is constantly written in all-caps, while the ontology is written as ‘Time’ or ‘OWL-Time’ in the reference that you cite. 

COMMENT 06 
I find the classes occp:PhaseA_Instant, occp:PhaseB_Instant, etc. confusing. Is the intended user of the ontology supposed to know what Phase B means? Why didn’t you pick more descriptive names for those classes? In the same light, the authors use abbreviations as class names (occp:EditBSTR), is the user again expected to know those abbreviations? 

COMMENT 07 
“The subclass relationships in Figure 3 illustrate how OCCP seamlessly integrates into the TIME ontology while introducing domain-specific instants and transitions”. 
- ‘seamlessly integrates’ seems a bit of an exaggeration for a list of subclasses. 
- ‘while’ seems to be be the wrong conjunction in this sentence. 

COMMENT 08 
It is unclear what is exactly meant by “modularity” on page 3, and how that “modularity ensures adaptability to diverse project needs”. Does it refer to the grouping of those instants in Phase A, B, C, etc.? If yes, why is this needed to ensure adaptability to diverse project needs? Wouldn’t the same list of instants (without that grouping) also enable that? 

COMMENT 09 
The relationship between occp:Phase and occp:Cycle is unclear. As I figured from the paper, Phases are Intervals that occur once, and Cycles are Intervals that are repetitive/iterative. Does that mean that an instance of an occp:Phase can become an instance of an occp:Cycle later (if it become repetitive in a later stage in the project). And if the planning review only happens once, does it become a Phase? Can Phases be part of Cycles, etc. If I understand correctly, Phases relate to those things in Figure 1, but based on what did you define the Cycles? Does CycleA (PlanningAndReview) relate to PhaseA (Planning)? If not, why are they both called ‘A’? 

COMMENT 10 
I think the paper needs a better visual representation of the ontology. Figure 2 is already described in text, I think it would be better to show how those four OCCP classes (PhaseX_Instant, Transition, Cycle, Phase) relate to each other (if they do). 

COMMENT 11 
I think modeling occp:hasPhase and occp:isInPhase is a bit risky, at least the naming of these two object properties can be confusing. You mention that occp:SubmissionToReview occp:hasPhase occp:PhaseA, but occp:SubmissionToReview occp:isInPhase occp:PhaseA would totally make sense as well for a data modeler that is not totally aware of all the domain/ranges of these object properties. Do you anyway really need those two object properties? The Time ontology already has object properties that describe this for you (time:inside for instants inside intervals and time:intervalIn for intervals inside other intervals). 

COMMENT 12 
I would be very careful with the use of the word ‘ensures’ in this work. Developing ontologies mostly ‘enables’ data modelers to define things, but the ontology itself hardly ensures that things are correctly modeled. E.g. “The occp:hasPhase property embeds events within structured lifecycle phases, ensuring temporal instances are correctly classified”. 

COMMENT 13 
I would revise the sub-property structure in Figure 4. time:hasBeginning has and time:hasEnd are well defined object properties, and I do not think that occp:beginsAfter and occp:beginsBefore should be a subproperties of time:hasBeginning. Time:hasBeginning has a range time:Instant, so if you intend to use occp:startsCycle and occp:startsPhase to link to Phases and Cycles (which are disjoint from time:Instant), then these should also not be subproperties of time:hasBeginning. 

COMMENT 14 
“This enriched semantic framework ensures that OCCP not only tracks time-related data, but also structures, validates, and integrates it within complex lifecycle models, supporting flexibility, consistency, and traceability in construction project management”. 
You should really not make such claims in this location of the paper, and if you want to make them later in the paper, you should be able to define what is meant by ‘flexibility, consistency, and traceability’ and how you measured those. I anyway do not think that OCCP itself validates time-related data, SHACL shapes might use OCCP to do that. 

COMMENT 15 
I think that the concept of the SHACL rules to validate whether the data is modeled according to predefined logic is a good idea. If I understand correctly, you embed the SHACL rules inside the ontology. Could you argue why you did this? Wouldn’t the ontology be more flexible if those rules were defined outside the ontology (is the sequence of phases and transitions and cycles etc. the same in all construction projects?). 
You for example state that “occp:CompletionOfPlanning must precede the start of subsequent phases”. But what if a data modeler just wants to use your ontology only for the Review lifecycle phase, starting from occp:CompletionOfPlanning. Would you get violation reports from SHACL? 

COMMENT 16 
It is unclear which SHACL rules you created. “Due to space limitations, only the core validation rules […] are shown”. I think that you should make space to show some of the more complex SHACL rules as this is such an important part of the novelty of this paper. 

COMMENT 17 
You use time:hasTime to link an xsd:dateTime to instances. But time:hasTime is an object property and not a datatype property. Assuming that you intended to model occp:hasUpdateTime (in Figure 7) as a subproperty of time:hasTime, then the time in Figure 7 should not be modeled this way. And consequently, the SHACL shape in Figure 8 should also be modeled differently. 
Figure 7 anyway needs an update, as I do not believe that this would work in practice. You now link a specific update (ex:Update123) using occp:hasUpdatedEvent to occp:ReviewApproval. Shouldn’t this also be an instance of the class occp:ReviewApproval (e.g. ex:ReviewApproval123). Now, all updates related to occp:ReviewApprovals link to the same class. What is meant by the occp:hasPreviousIfcIdentifier? An identifier of the review approval event in IFC, or an identifier to IFC elements or so? If its supposed to be the identifier of an IFC element, why didn’t you model the TTL in Figure 7 according to how Figure 5 represents the IFC element? And finally, you currently model ex:Update123 occp:hasPreviousValue “X”. Shouldn’t the estimated time of the ex:ReviewApproval123 have that previous value? This seems to be a cumbersome way of modeling updates, and does not follow best practices in the linked building data community (e.g. how the Ontology for Property Management handles updates).   

COMMENT 18 
No need to introduce all the abbreviations in the conclusion section if you do not use them after introducing them. 

COMMENT 19 
Please be careful to not exaggerate the results of the paper in the conclusion. It would anyway be helpful to mention the limitations of the paper. 
“The introduced update tracking mechanism strengthens OCCP’s ability to record, query, and validate IFC modifications, ensuring seamless version tracking and bidirectional synchronization with Git-based repositories”. 
I am not sure whether this is true, based on the results in this paper. The classes and object properties introduced in the paper hardly enable data modelers to record IFC modifications. I also don’t know whether that is the purpose of this ontology. The ontology seems to mostly cover global project timeline, and is limited in change tracking of individual elements in the IFC model (e.g. a ReviewStart would not be modeled on each individual element, I guess). I therefore also don’t believe that the ontology enables seamless version tracking at this stage. You did not show any bidirectional synchronization with Git-based repositories, so this is not something you can claim. 
You claim that OCCP is “flexible and extensible”, but it unclear what this means and why this is relevant. 
I assume that you manually created the RDF snippet in Figure 7. It is unclear how you intend to automate this process, or how you aim to link this to existing scheduling workflows and BIM workflows. For the ontology to be valuable in practice, this is necessary, and you should mention this as a limitation. 
  
  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 

Review 2 
======== 
Contribution of the Submission 
------------------------------ 
This paper introduces a new ontology, namely one for tracking construction processes and there chronological sequences. The value for this ontology is argued in the paper, and it is also not a bad argumentation. The ontology is created and validated internally, with some details given in the paper. It is great that the authors put their work in this paper, such that it can be cross-checked and peer-reviewed. 

Evaluation of the Contribution 
------------------------------ 
Overall      (50%): 8 
Significance (20%): 8 
Originality  (20%): 6 
Presentation (10%): 8 
Total points (out of 10): 7.6 

Comments for the Authors 
------------------------ 
This is a very focused work, aiming to support tracking of time in a construction processes, using an ontology and therefore also semantic web technologies (RDF graphs). The work is generally well-done, and I don't have critical objections in the work. I do have several remarks however, aiming to help and support the authors in their work. 

- The authors aim to add time constraining and versioning to IFC, arguing that IFC does not have it, and that IFC needs it. I believe that the authors need to re-evaluate this. IFC does include IfcOwnerHistory, which has been made for version tracking, but has never been used properly by basically anyone. So, in regards to versioning of modelling, IFC does enable time stamping and versioning of nearly anything, and it is also shown that the common implementer does not need it inside IFC (as it has not been used). If it comes to time scheduling in construction projects, also that is in place, under IfcWorkPlan and similar entities (including Phases and Tasks and such). Also this part of IFC is underused, yet it is there. So the same comment can be made about it being available and not being used in IFC. 
- On a similar note: IFC functions as a reference file (not even a design transfer file) from one software to the other. In both endpoints (the software applications), appropriate versioning is available, in the form of in-memory versioning in the in-memory database, as well as file management. I don't agree that IFC should enable versioning, and the authors need to consider versioning in the context of operating software, where there are many appropriate options available and also implemented. 
- The authors do not distinguish clearly between versioning of data modelling and time tracking in a workplan. The two are extremely different, and the authors need to choose which one of the two they target. From the title, they seem to aim at the workplan procedures, but the paper (incl. examples) deal with versioning in file changes. It really can't be both, as both areas have different literature support. In case of workplan time management, the authors need to refer to the DiCon ontologies, that allow this time planning of work orders in digital construction. In case of file data versioning, the authors need to refer to BCF, BCFOWL, and also to OPM for the time-based management of property values using states. The example in Fig. 7 can easily be supported using OPM. Other works exist on the same topic(s). 
- ICDD has explicitly targeted Document Delivery. It actually even changed name from Data Drop to Document Delivery before publication, making it clear that it is a mechanism for exchanging dead files, and explicitly not live data that could be versioned. It makes no sense to now try to put it back in into ICDD (or IFC), since those standards are now targeting extremely static content handovers, not data exchange with versions. 
- OPM seems to have a different acronym on page 2. Make sure to distinguish this from the Ontology for the Management of Properties (also available for geometric updating, by the way: OMG. 
- Can the paper distinguish more clearly between SHACL and OWL. We need both, and not in one place. So this is a very strong recommendation to store both in two different places. SHACL is to be used only for constraint checking. It is a Constraint Language, not a rule language. Calling SHACL Shapes a Ruleset is therefore not correct in my opinion, as it does not include any inference. SHACL is only Constraint-checking. Rule-based inference is to be enabled by the OWL constructs, that need to be preserved for other reasons. Please in your publication, provide the two options, in different separate places. 
- Competency questions are not to be transformed into SHACL shapes. They need to be checked using SPARQL queries on a simple dataset. Please make that change. These SPARQL queries allow to check whether the dataset can actually contain the data in the OWL ontology as RDF graphs (and so should be run on the RDF graph, not somewhere in Protégé with the OWL ontology). This is a different checking compared to checking whether the SHACL shapes are correct. SPARQL is also a lot more expressive than SHACL, and the more interesting constraints typically need to have SPARQL embedded. So please distinguish correctly between all these technologies: SHACL, OWL, RDF, SPARQL. 
- In the figures, make the color difference between class and instance better distinguishable (dark grey). 
- Please include in the final paper the reference to the published version, even if it is a preliminary version (enable versioning by default in the OWL ontology publication), and preferably also make a draft dataset available that shows clearly how it is used. Not publishing those two with the paper, would be a majorly missed opportunity, and reduce paper value with about 80%. 


Great work. I hope really that the comments are helpful to fixing items in the last stretch before final publication.
