EG ICE Review

Review 1:

The paper presents a strong contribution to time-based lifecycle management of railway infrasfrustrcutre. 
1. Please describe what 'PROV-O' shorts for in the first time it appears in the paper. 
2. It is confusing that if the 'cMoD' is developed initially in this paper or not, because it has 'the current state of development of cMod' and other presentation that may cause unnecessary confusion. I assume that the concept of 'cMod' is proposed by the author. Please explain what is the structure of this model and why. A diagram might be helpful. 
3. In page 2, it should be 'multimodal' instead of 'multimodel'. 
4. It is unclear in the step railway lifecycle in the Figure 1. Why 'D-usage' is connected with 'M-Deconstruction'. Is there any reference for this workflow? 
5. In the Figure 2, it worths to also mark up the â€˜oval' and 'rectangle' shape meanings. The same with Figure 3. 
6. The structure and the module designed int he proposed ontology is unclear. Please consider a list of what 'class' and 'property' are involved, instead of just the examples; what kinds of query questions can be completed based on the designed ontology. 
7. Please add the discuss of the practicality of this ontology. How and who will benefit from it. In the railway operational phase, there are a huge amount of dynamic/ time-sensitive operational data, how and will these data be able to integrated into the proposed ontology? If not, the significant of design the time-based ontology might be low. 
8. While the conceptual framework of cMod is well described, the paper does not clearly indicate whether it has been implemented in a real-world BIM scenario. A case study or validation example, even a small-scale demonstration, would significantly strengthen the argument. 
9. The interactions between OCCP, MsOCCP, and cMM are described in technical terms, but a workflow diagram would greatly enhance comprehension. 
10. Some minor grammatical issues and awkward sentence structures need refinement.
11. Consider revising the introduction to more explicitly highlight what makes cMod uniquely different from prior existing management system with chronological models or design.

Review 2: 
EG-ICE 2025 - Chronological Models (cMod) Towards consistent life cycle information management The paper addresses a highly relevant topic within the construction industry. The introduction is particularly well-written, effectively articulating the problem and clearly identifying the research gap. In describing the motivation, the authors highlight shortcomings in current railway life cycle management, specifically citing a lack of chronological depth, distributed flexibility, and seamless integration. 

It would be beneficial if the authors could further elaborate on why these particular challenges are prevalent in the context of railway infrastructure, as this would strengthen the problem statement. Regarding the developed ontology, OULD, several aspects warrant discussion. As a scientific artifact intended for potential reuse, the OULD namespace should ideally resolve to a persistent web address, and the ontology itself should be made publicly available for review and use, adhering to principles of reproducibility. The authors acknowledge that OULD has significant overlaps with existing ontologies. To provide better context and classification, a visual overview illustrating the relationship between OULD and other relevant ontologies would be beneficial. Further clarification is also needed regarding the precise relationship or connection between the OULD and OCCP. Exploring specific concepts within the OULD, the idea of an ould:UpdatableEntity is interesting. However, the rationale behind using ould:hasIFCModelID for unique identification instead of standard URIs is not entirely clear and could be explained further. The proposed ould:hasHash property or function, detailed in the section discussing the cMod Manager (cMM), is a good approach and appears important for effectively capturing changes in IFC data. While the connection to IFC data is a clear focus, it is worth considering if this method for chronological ordering is strictly limited to IFC. Could it also be applied to other types of documents or data relevant in a construction lifecycle? On a related note concerning digital representations, ideally, a physical entity should have a single URI. If multiple representations exist, owl:sameAs can be employed to link them. It would be relevant to know if existing ontologies have already defined properties similar to :hasSuccessor or :hasPredecessor, potentially referencing examples such as dicl:Stage (Digital Construction Ontologies - DiCon). In terms of the paper's presentation, general formatting should be reviewed carefully, specifically mentioning issues observed with the captions of Figure 1 and 3. Regarding Figure 1, its relevance to the surrounding text is not immediately clear; presenting excerpts of the OULD or its minimal elements might be a more effective use of a figure in this location. For Figures 2 and 3, which appear to be diagrams, the current use of shapes and colors does not significantly enhance understanding; adopting an ontology-specific design approach (e.g., as demonstrated in the linked resource: https://doi.org/10.5281/zenodo.6816899) could improve their clarity. Figures 4 and 5 contain code examples. It is standard practice in scientific publishing to present code snippets as designated code listings rather than figures. Implementing color coding would significantly improve the readability of these examples. Additionally, mentioning the serialization format used for the code would be beneficial. Finally, there appears to be a reference to 'Listing 1' in the text, but this listing is not included in the manuscript. Please ensure all referenced listings are present. Finally, concerning future development and application, the authors state that cMod has primarily been tested using smaller examples. It would be valuable to include a discussion on potential challenges or issues that might realistically be encountered when attempting to scale the framework to handle larger, more complex datasets or real-world projects.
